<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:sec="http://www.springframework.org/security/tags"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:c="http://xmlns.jcp.org/jsp/jstl/core" xmlns:f="http://java.sun.com/jsf/core"
>

<ui:composition template="/layout.xhtml">

    <ui:define name="title">
        Home
    </ui:define>


    <ui:define name="content">

        <sec:authenticated>
            <h:outputText value="Welcome  #{userInfoController.currentUserFullName}!"/>
            <!-- https://stackoverflow.com/questions/11469211/how-to-use-secauthorize-access-hasroleroles-for-checking-multiple-roles-->
            <!-- https://docs.spring.io/spring-security/site/docs/3.0.x/reference/el-access.html-->
            <sec:authorize access="hasRole('ADMIN')">
                <h:outputText id="adminNotifyText" value="You are logged in as an administrator"/>
            </sec:authorize>
        </sec:authenticated>

        <sec:anonymous>
            You are not logged in!
        </sec:anonymous>

        <br/><br/>
        <h:form prependId="false">
            <h:selectOneMenu value="#{filterController.dropDownSelect}"
                             onchange="submit()"
                             id="categoryFilterId">
                <f:selectItems var="category"
                               value="#{filterController.allCategories}"
                               itemLabel="#{category}"/>

            </h:selectOneMenu>
            <br/>
            <h:dataTable value="#{itemController.allItemsSortedByScore}" var="item" border="1" id="itemsTable" class="tableItem">
                <h:column>
                    <f:facet name="header">Title</f:facet>
                    <h:outputLabel value="#{item.title}"
                                   class="itemTitle"
                                   id="title"/>
                </h:column>
                <h:column>
                    <f:facet name="header">Description</f:facet>
                    <h:outputLabel value="#{item.description}"
                                   class="itemDescription"
                                   id="description"/>
                </h:column>
                <h:column>
                    <f:facet name="header">Category</f:facet>
                    <h:outputLabel value="#{item.category}"
                                   class="itemCategory"
                                   id="category"/>
                </h:column>
                <h:column>
                    <f:facet name="header">Rating</f:facet>
                    <h:outputLabel value="#{mainController.getRankAverage(item.id)}/5"
                                   rendered="#{mainController.getRankAverage(item.id)>0.01}"
                                   class="itemRating"
                                   id="rating"/>
                    <h:outputLabel value="No rating"
                                   rendered="#{mainController.getRankAverage(item.id)==0}"
                                   class="itemEmptyRating"
                                   id="ratingEmpty"/>
                </h:column>
                <h:column>
                    <f:facet name="header">Details</f:facet>
                    <h:commandButton id="detailBtn"
                                     value="Details"
                                     class="detailBtn"
                                     action="#{mainController.toItemDetailPage(item)}"/>
                </h:column>
            </h:dataTable>
        </h:form>

    </ui:define>

</ui:composition>
</html>
